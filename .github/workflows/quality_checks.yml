name: Quality Checks

on:
  pull_request:
    types: [opened,synchronize]

permissions:
  contents: read

jobs:
  build_android_project:
    name: Build Android Project
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: ./package-lock.json

      - name: Install NPM Dependencies
        run: npm ci
      
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Generate Android Project
        run: npm run build -- --platform=android --entryUrl="https://www.example.com"

      - name: Build Android App
        run: |
          cd output/Example
          npx cap build android

  build_ios_project:
    name: Build iOS Project
    runs-on: macos-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: npm
          cache-dependency-path: ./package-lock.json

      - name: Install NPM Dependencies
        run: npm ci
      
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'go.mod'

      - name: Generate iOS Project
        run: npm run build -- --platform=ios --entryUrl="https://www.example.com"

      - name: Build iOS App
        run: |
          cd output/Example
          npx cap build ios

  licensing:
    name: License Headers
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Check Files
        run: |
          REQUIRED_HEADER_SNIPPET="Copyright 20[0-9][0-9] The Outline Authors"
          MISSING_HEADER_FILES=$(find . \( -name "*.handlebars" -o -name "*.mjs" -o -name "*.html" -o -name "*.sh" \) -not -name "*.json.handlebars" -not -name "*.md.handlebars" -exec grep -L "${REQUIRED_HEADER_SNIPPET}" {} +)

          if [[ -n "$MISSING_HEADER_FILES" ]]; then
            echo "Error: The following files are missing the required license header:"
            echo "$MISSING_HEADER_FILES"
            exit 1
          else
            echo "All files have the required license header."
          fi
